#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size larger
CSCE 221 Cover Page
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align right

\size larger
First NameAbdullah
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name Ahmad
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN 927009064
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\align right

\size larger
User Name Abdullah2808
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address Abdullah2808@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\size default

\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more Aggie Honor System Office 
\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Article
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
https://www.geeksforgeeks.org/quick-sort/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
https://bit.ly/3d0jOwJ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
https://bit.ly/37suao8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wiki Article (URL shortened)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abdullah Ahmad
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6/12/2020
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
Homework 2
\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
due June 10 at 11:59 pm to eCampus
\end_layout

\begin_layout Enumerate
(20 points) Given two sorted lists, L1 and L2, write an efficient C++ code
 to compute L1 ∩ L2 using only the basic STL list operations.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide evidence of testing: submit your code
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language={C++}"
inline false
status open

\begin_layout Plain Layout

list<int> intersection(list<int> L1, list<int> L2)  { 	
\end_layout

\begin_layout Plain Layout

	// construct a new list to return 	
\end_layout

\begin_layout Plain Layout

	list<int> L3; 	
\end_layout

\begin_layout Plain Layout

	// iterators 	
\end_layout

\begin_layout Plain Layout

	list<int>::iterator it1; 	
\end_layout

\begin_layout Plain Layout

	list<int>::iterator it2;
\end_layout

\begin_layout Plain Layout

	it1 = L1.begin();
\end_layout

\begin_layout Plain Layout

	it2 = L2.begin();
\end_layout

\begin_layout Plain Layout

	while (it1 != L1.end() && it2 != L2.end())
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

		if (*it1 < *it2)
\end_layout

\begin_layout Plain Layout

			it1++;
\end_layout

\begin_layout Plain Layout

		else if (*it2 < *it1)
\end_layout

\begin_layout Plain Layout

			it2++;
\end_layout

\begin_layout Plain Layout

		else {
\end_layout

\begin_layout Plain Layout

			L3.push_back(*it1);
\end_layout

\begin_layout Plain Layout

			it1++;
\end_layout

\begin_layout Plain Layout

			it2++;
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	return L3;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void print(list<int> L1)
\end_layout

\begin_layout Plain Layout

{ 	for (auto it = L1.begin(); it != L1.end(); ++it)
\end_layout

\begin_layout Plain Layout

		cout << ' ' << *it; }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int main() {
\end_layout

\begin_layout Plain Layout

	list<int> L1, L2, L3;
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < 9; i++) {
\end_layout

\begin_layout Plain Layout

		L1.push_back(i);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < 15; i++) {
\end_layout

\begin_layout Plain Layout

		L2.push_back(i); 	}
\end_layout

\begin_layout Plain Layout

	L3 = intersection(L1, L2);
\end_layout

\begin_layout Plain Layout

	print(L1); 	cout << endl; 	print(L2); 	cout << endl; 	print(L3);
\end_layout

\begin_layout Plain Layout

	return 0; } 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

0 1 2 3 4 5 6 7 8
\end_layout

\begin_layout Plain Layout

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
\end_layout

\begin_layout Plain Layout

0 1 2 3 4 5 6 7 8
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
What is the running time of your algorithm? 
\end_layout

\begin_deeper
\begin_layout Standard
The running time of the algorithm in Big-O notation is O(n).
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ recursive function that counts the number of nodes
 in a singly linked list.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Test your function using different singly linked lists.
 Include your code.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language={C++}"
inline true
status open

\begin_layout Plain Layout

int num = 0;
\end_layout

\begin_layout Plain Layout

struct Node {
\end_layout

\begin_layout Plain Layout

	int value;
\end_layout

\begin_layout Plain Layout

	struct Node* next;
\end_layout

\begin_layout Plain Layout

};
\end_layout

\begin_layout Plain Layout

void Insert(struct Node** head, int value)
\end_layout

\begin_layout Plain Layout

 {
\end_layout

\begin_layout Plain Layout

	struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
\end_layout

\begin_layout Plain Layout

	temp->value = value;
\end_layout

\begin_layout Plain Layout

	temp->next = (*head);
\end_layout

\begin_layout Plain Layout

	(*head) = temp;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int NodeCount(struct Node* head)
\end_layout

\begin_layout Plain Layout

{ 	if (head != NULL)
\end_layout

\begin_layout Plain Layout

	{ 		
\end_layout

\begin_layout Plain Layout

	num++;
\end_layout

\begin_layout Plain Layout

		NodeCount(head->next);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

 		return num; }
\end_layout

\begin_layout Plain Layout

int main()
\end_layout

\begin_layout Plain Layout

 {
\end_layout

\begin_layout Plain Layout

	struct Node* head = NULL;
\end_layout

\begin_layout Plain Layout

	struct Node* head2 = NULL;
\end_layout

\begin_layout Plain Layout

	Insert(&head, 1);
\end_layout

\begin_layout Plain Layout

	Insert(&head, 2);
\end_layout

\begin_layout Plain Layout

	Insert(&head, 2);
\end_layout

\begin_layout Plain Layout

	Insert(&head, 3);
\end_layout

\begin_layout Plain Layout

	Insert(&head, 4);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Insert(&head2, 1);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 2);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 2);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 3);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 4);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 5);
\end_layout

\begin_layout Plain Layout

	Insert(&head2, 6);
\end_layout

\begin_layout Plain Layout

	cout << "The total number of nodes: " << NodeCount(head) << endl;
\end_layout

\begin_layout Plain Layout

	cout << "The total number of nodes: " << NodeCount(head2) << endl;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

The total number of nodes: 5 
\end_layout

\begin_layout Plain Layout

The total number of nodes: 12
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Write a recurrence relation that represents your algorithm.
 
\end_layout

\begin_deeper
\begin_layout Standard
The recurrence relation is 
\begin_inset Formula $T(n)=T(n-1)+C$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Solve the recurrence relation using the iterating or recursive tree method
 to obtain the running time of the algorithm in Big-O notation.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
T(n-1) & = & T(n-2)+C'\\
T(n) & = & T(n-1)+2C'\\
T(n-2) & = & T(n-3)+C;\\
T(n) & = & T(n-3)+C;\\
T(n) & = & T(n-x)+xC;\\
T(n) & = & T(n-n)+nC'
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
This means that if 
\begin_inset Formula $T(n)=T(0)+nC',T(0)=C$
\end_inset

 then 
\begin_inset Formula $T(n)=C+nC'$
\end_inset

.
 So the Big-O notation is O(n).
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ recursive function that finds the maximum value
 in an array (or vector) of integers 
\emph on
without
\emph default
 using any loops.
\end_layout

\begin_deeper
\begin_layout Enumerate
Test your function using different input arrays.
 Include the code.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language={C++}"
inline false
status open

\begin_layout Plain Layout

template <class T> const T& max(const T& a, const T& b) {
\end_layout

\begin_layout Plain Layout

	return (a < b) ? b : a;
\end_layout

\begin_layout Plain Layout

     }
\end_layout

\begin_layout Plain Layout

int findMax( int A[], int n )
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	if (n == 1)
\end_layout

\begin_layout Plain Layout

		return A[0];
\end_layout

\begin_layout Plain Layout

	return max(A[n - 1], findMax(A, n - 1));
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

// test 1
\end_layout

\begin_layout Plain Layout

int main() {
\end_layout

\begin_layout Plain Layout

	int A[] = { 1, 35,  3 , 4, 15, 25, 12 };
\end_layout

\begin_layout Plain Layout

	int n = 8;
\end_layout

\begin_layout Plain Layout

	cout << "The max element is: " << findMax(A, n) << endl;
\end_layout

\begin_layout Plain Layout

	return 0;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\begin_inset Quotes eld
\end_inset

The max element is: 35
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//
\end_layout

\begin_layout Plain Layout

int main() {
\end_layout

\begin_layout Plain Layout

	int A[] = { 1, 12,  45 , -12, 15, 25, 12 };
\end_layout

\begin_layout Plain Layout

	int n = 8;
\end_layout

\begin_layout Plain Layout

	cout << "The max element is: " << findMax(A, n) << endl;
\end_layout

\begin_layout Plain Layout

	return 0;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\begin_inset Quotes eld
\end_inset

The max element is: 45
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Write a recurrence relation that represents your algorithm.
 
\end_layout

\begin_deeper
\begin_layout Standard
The recurrent relation is 
\begin_inset Formula $T(n)=T(n-1)+1$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Solve the recurrence relation and obtain the running time of the algorithm
 in Big-O notation.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{align*}
T(n) & =T(n-1)+1\\
 & =T(n-2)+1+1\\
 & =1+1+...n\\
 & =O(n)
\end{align*}

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
(20 points) What is the best, worst and average running time of quick sort
 algorithm? 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide recurrence relations and their solutions.
 
\end_layout

\begin_layout Enumerate
Provide arrangement of the input and the selection of the pivot point for
 each case.
\end_layout

\begin_deeper
\begin_layout Standard
Best Case: 
\begin_inset Formula $O(nlog(n))$
\end_inset


\end_layout

\begin_layout Standard
The recurrence relation is 
\begin_inset Formula $T(n)=2T(n/2+O(n)$
\end_inset

 and can be solved using the master method to obtain the above Big-O runtime.
 This case occurs when the parition selects the element in the middle as
 the pivot.
\end_layout

\begin_layout Standard
Worst Case: 
\begin_inset Formula $O(n^{2})$
\end_inset


\end_layout

\begin_layout Standard
The recurrence relation is 
\begin_inset Formula $T(n)=T(n-1)+O(n)$
\end_inset

, and can be solved using the tree method or iterative method to obtain
 the above Big-O runtime.
 This case occurs when either the largest or smallest element is selected
 as the pivot
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ function that counts the total number of nodes with
 two children in a binary tree (do not count nodes with one or none child).
 You can use a STL container if you need to use an additional data structure
 to solve this problem.
 Use the big-O notation to classify your algorithm.
 Include your code.
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
